리트라이 결과
ex01: KO 수정 | ex02: OK | ex03: KO 수정 | ex04: OK | ex05: KO 수정 | ex06: OK | ex07: OK | ex08: KO 수정
다시 리트라이
ex01: OK | ex02: OK | ex03: OK | ex04: OK | ex05: OK | ex06: OK | ex07: OK | ex08: KO 수정

>>>> 재평가는 나중에...............

Ex01

1. 환경변수 앞에 $ 붙여야 인식 가능
2. tr ' ' ',' 로 공백을 쉼표로 변환
3. 개행문자 삭제
4. 권한변경 ./로 출력 가능

\n :: 줄바꿈 명령어

** 오답 원인: 슬래시 방향 잘못 써서 틀림. \n 이다

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

Ex02

1. Find . -name "*.sh" -type f 를 사용해 ".sh"로 끝나는 파일(f) 추출
2. rev로 파일명 반대로 바꾸고 (예 hs.hs_dnif)
3. cut -d 를 이용해 "/"로 (폴더와 디렉토리 연결) 나눈 후 첫번째 부분 출력 후 "." 으로 나눈 후 두번째 부분 출력 (결과: hs dnif)
4. 다시 rev 원래 이름으로 되돌리기
5. 권한변경 ./로 출력 가능

rev :: 반대로 출력
cut -f n :: n 부분 잘라내기
-d :: 제거

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

Ex03

1. Find . 으로 전체 파일 및 디렉토리 검색
2. wc 명령어(개수 세기)에 옵션은 -l를 사용하여 라인수만 출력한다
3. Tr -d ' '을 사용하여 개행문자(공백) 삭제
4. 권한변경 ./로 출력 가능

** 오답원인: ls -Rl은 인식이 되지 않음. find . 을 사용해야한다 // 앞의 명령어는 본인을 포함하지 않는다

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

Ex04

1. ifconfig -a :: 전체 네트워크 인터페이스 설정 확인
2. grep 'ether ' 을 이용, "ether "이 들어가면 출력
3. cut -d ' ' -f2 을 사용하여 공백 " "을 기준으로 두번째 부분 잘라내기(주소만 추출)

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

Ex05

1. 파일명 "~ 는 그냥 입력이 안되므로 각 특수문자 앞에 역슬래시(\) 붙여서 생성
(\"\\\?\$\*\'MaRViN\'\*\$\?\\\" -> 결과: "\?$*'MaRViN'*$?\")
2. echo -n(개행문자 삭제) "42" 입력, 바이트를 2로 만들기
3. chmod 권한 수정

r(읽기):4
w(쓰기):2
x(실행):1

** 오답원인 : 컴퓨터에 따라 ls -lRa *MaRV* | cat -e 입력시 파일명이 "\?$*?M-^@M-^YMaRViN?M-^@M-^Y*$?\"$로 출력되는 오류. 원인은 폰트문제? 아직은 해결 불가능. 컴퓨터를 바꿔야 한다
-> 윗줄 파일명 복붙하지 말고 아랫줄 복붙하면 됨..허무

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

Ex06

1. ls -l 로 자세한 정보 출력
2. sed -n 'p;n' 를 사용해 홀수 줄 출력

sed -n 'p;n' :: 홀수행 출력 // p는 페이지, n은 넥스트의 약자
sed -n 'n;p' :: 짝수행 출력

sed // -n(해당 범위 출력) 옵션은 항상 p와 함께 사용
$는 끝이므로 4에서 끝까지 출력은 -n '4,$p'로 사용한다

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

Ex07

1. grep -v '^#' 를 사용, #으로 시작하는(주석) 항목을 제외하고 출력한다
2. sed -n 'n;p' 로 짝수 줄 출력
3. cut 명령어를 사용, ":" 기준으로 첫번째 부분을 자른 뒤 rev 한다 // cut을 먼저 쓰는 이유: 
4. sort (정렬) -r (역순 출력) -> 역순으로 정렬
5. awk -v start=$FT_LINE1 -v end=$FT_LINE2 'NR==start,NR==end'
6. 줄바꿈(\n)을 쉼표로 변환, sed 명령어를 사용하여 ', ' 와 마지막줄 '.'로 바꾼다 // tr 은 같은 문자수만 변환할 수 있다
7. xargs echo -n으로 개행문자 삭제
8. 권한변경 ./로 출력 가능

sed 's/x/x/g(전체 적용)'
xargs 앞선 명령어의 결과를 입력으로 받아 인자를 연속으로 나열하여 커맨드 실행

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

Ex08

echo $FT_NBR1 + $FT_NBR2 | sed "s/\'/0/g" | tr '\\\"\?\!' 1234 | tr 'mrdoc' 01234 | xargs  echo 'obase=13; ibase=5;' | bc |  tr '0123456789ABC' 'gtaio luSnemf'

1. echo $FT_NBR1 + $FT_NBR2 (환경변수 앞에 $ 붙이기) 를 사용하여 출력
2. sed 와 tr 로 각 문자를 숫자로 변환한다. 특수문자 인식을 위해 /를 붙인다
3. 5진수를 13진수로 변환한다. 13진수가 5진수의 영향을 받아 5진수의 13인 23으로 입력한다 // 순서를 바꾸면 영향 없으므로 obase=13; ibase=5; 도 가능
4. bc로 계산한다
5. 13 진수 '123456789ABC' 를 'gtaio luSnemf' 로 전환

obase :: out base
ibase :: in base
bc :: 수식 계산 (복잡한 연산 가능) ㅡ expo :: 간단한 연산

** 오답 원인: 환경변수 앞에 $를 붙이지 않았음 / "일때는 '로 묶어야하고 '일때는 "로 묶어야 오류가 나지 않는다 /. 슬래시 문제? 특수기호 뒤에 슬래시를 붙이지 않았음
** 오답 원인: 0123456789ABC'에서 0을 안씀..........
